name: Deploy Website to GitHub Pages

on:
  push:
    branches:
      - main  # Or your default branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Checkout Vortex Engine Duo Branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: 'StoneOrbits/VortexEngine'
        path: 'VortexEngine'
        ref: 'daniel/duo-tutorial'

    # Install Emscripten dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 nodejs cmake

    # Install Emscripten
    - name: Install Emscripten
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh

    # Build WebAssembly for Duo
    - name: Build WebAssembly with Emscripten
      run: |
        source emsdk/emsdk_env.sh
        cd VortexEngine/VortexEngine/VortexLib
        make clean
        make -j wasm

    # Move artifacts to correct location for GitHub Pages
    - name: Move Build Artifacts
      run: |
        mkdir -p public/js
        cp VortexEngine/VortexEngine/VortexLib/VortexLib.js public/js/VortexLib.js
        cp VortexEngine/VortexEngine/VortexLib/VortexLib.wasm public/js/VortexLib.wasm

    # Add cache busters to the index and js
    - name: Add Cache Busters
      run: |
        chmod +x ./add_cache_busters.sh && ./add_cache_busters.sh

    # Create .nojekyll to disable Jekyll processing on GitHub Pages
    - name: Create .nojekyll file
      run: echo "" > public/.nojekyll

    # Deploy to GitHub Pages
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload public folder
        path: './public'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    # Archive the build artifacts
    - name: Archive VortexLib files
      uses: actions/upload-artifact@v4
      with:
        name: VortexLib-files
        path: |
          public/js/VortexLib.js
          public/js/VortexLib.wasm
